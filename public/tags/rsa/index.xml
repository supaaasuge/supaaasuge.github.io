<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RSA on Supaaasuge&#39;s Blog</title>
    <link>https://supaaasuge.github.io/tags/rsa/</link>
    <description>Recent content in RSA on Supaaasuge&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://supaaasuge.github.io/tags/rsa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Breaking RSA - TryHackMe Writeup</title>
      <link>https://supaaasuge.github.io/posts/breaking-rsa/</link>
      <pubDate>Mon, 06 May 2024 00:00:00 +0000</pubDate>
      <guid>https://supaaasuge.github.io/posts/breaking-rsa/</guid>
      <description>TryHackMe - Breaking RSA This room present&amp;rsquo;s an exercise in which a public RSA SSH key is given to you, the goal to complete this room is to successfully recover the private key and then use the recovered private key to authenticate via SSH. I began with nmap scanning, and after a bit of web directory enumeration, we find a RSA public key SSH entry. We then download this public key, extract n the public modulus, and e the public exponent, and attempt to factor n into it&amp;rsquo;s prime factors p and q.</description>
    </item>
    <item>
      <title>Crypto - N00bzCTF23 Writeup</title>
      <link>https://supaaasuge.github.io/posts/n00bzctf23/</link>
      <pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate>
      <guid>https://supaaasuge.github.io/posts/n00bzctf23/</guid>
      <description>N00bzCTF 2023 This challenge present&amp;rsquo;s a relatively simply RSA challenge, I had seen this before in PicoCTF so I was able to solve it pretty quickly, however this was unfortunately the only challenge I had time for that weekend as I was busy. Also, I sadly did not write down the name of the challenge and don&amp;rsquo;t care enough to go find it so&amp;hellip; Enjoy :)&#xA;Source Code from Crypto.Util.number import * import time flag = bytes_to_long(b&amp;#39;n00bz{***********************}&amp;#39;) e = 17 p = getPrime(1024) q = getPrime(1024) n = p*q ct = pow(flag,e,n) time.</description>
    </item>
  </channel>
</rss>
